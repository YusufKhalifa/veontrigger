<?xml version="1.0" encoding="UTF-8"?>

<!--
  Licensed to the Apache Software Foundation (ASF) under one or more
  contributor license agreements.  See the NOTICE file distributed with
  this work for additional information regarding copyright ownership.
  The ASF licenses this file to You under the Apache License, Version 2.0
  (the "License"); you may not use this file except in compliance with
  the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.
-->

<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:util="http://www.springframework.org/schema/util"
       xsi:schemaLocation="
        http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/util
        http://www.springframework.org/schema/util/spring-util.xsd">
    <!--
        Alter configuration below as needed.
    -->

    <!-- Cassandra connection -->
    <bean id="cassandraAdminDataSource" class="org.apache.ignite.cache.store.cassandra.datasource.DataSource">
        <!-- Set comma separated values for contact points -->
        <property name="contactPoints" value="127.0.0.1"/>
        <!--<property name="protocolVersion" value="4"/>-->
        <property name="user" value="user"/>
        <property name="password" value=""/>
        <property name="readConsistency" value="ONE"/>
        <property name="writeConsistency" value="ONE"/>
    </bean>

    <bean id="cassandraRegularDataSource" class="org.apache.ignite.cache.store.cassandra.datasource.DataSource">
        <property name="contactPoints" value="127.0.0.1"/>
        <!--<property name="protocolVersion" value="4"/>-->
        <property name="user" value="user"/>
        <property name="password" value=""/>
        <property name="readConsistency" value="ONE"/>
        <property name="writeConsistency" value="ONE"/>
    </bean>


    <bean id="cache_l1_triggerrecord_persistence_settings" class="org.apache.ignite.cache.store.cassandra.persistence.KeyValuePersistenceSettings">
        <constructor-arg type="java.lang.String">
            <value><![CDATA[
                    <persistence keyspace="DMP_CLUSTER" table="l1_triggerrecord">
                        <keyPersistence class="java.lang.String" strategy="PRIMITIVE" />
                        <valuePersistence class="com.thinkbig.veon.datadefinition.L1_TriggerRecord"
                                          strategy="POJO"
                                          serializer="org.apache.ignite.cache.store.cassandra.serializer.JavaSerializer">
                            <field name="id" column="id" index="true"/>
                            <field name="srcId" column="src_id" index="true"/>
                            <field name="payload" />
                            <field name="entryTime" column="entry_time" />
                            <field name="isProcessed" column="is_processed" index="true"/>
                            <field name="batchId" column="batch_id" index="true"/>
                        </valuePersistence>
                    </persistence>]]>
            </value>
        </constructor-arg>
    </bean>


    <bean id="cache_l2_DPI_persistence_settings" class="org.apache.ignite.cache.store.cassandra.persistence.KeyValuePersistenceSettings">
        <constructor-arg type="java.lang.String">
            <value><![CDATA[
                    <persistence keyspace="DMP_CLUSTER" table="l2_DPI">
                        <keyPersistence class="java.lang.String" strategy="PRIMITIVE" />
                        <valuePersistence class="com.thinkbig.veon.datadefinition.L2_DPI"
                                          strategy="POJO"
                                          serializer="org.apache.ignite.cache.store.cassandra.serializer.JavaSerializer">
                            <field name="id" />
                            <field name="srcId" />
                            <field name="hasParsingErrors" />
                            <field name="msisdn" />
                            <field name="uplink_traffic" />
                            <field name="downlink_traffic" />
                            <field name="startTimeMilSec" />
                            <field name="protocol_category" />
                            <field name="application" />
                            <field name="imeisv" />
                            <field name="imsi" />
                            <field name="rat_type" />
                        </valuePersistence>
                    </persistence>]]>
            </value>
        </constructor-arg>
    </bean>

    <bean id="grid.cfg" class="org.apache.ignite.configuration.IgniteConfiguration">

        <property name="lifecycleBeans">
            <list>
                <bean class="com.thinkbig.veon.lifecycle.StartUp"/>
            </list>
        </property>
        <property name="gridLogger">
            <bean class="org.apache.ignite.logger.log4j.Log4JLogger">
                <constructor-arg type="java.lang.String" value="E:\Work\Github\veontrigger\src\main\resources\log4j.xml"/>
            </bean>
        </property>

        <property name="discoverySpi">
            <bean class="org.apache.ignite.spi.discovery.tcp.TcpDiscoverySpi">
                <property name="socketTimeout" value="60000"/>
                <property name="networkTimeout" value="60000"/>
                <property name="ackTimeout" value="5000" />
                <property name="statisticsPrintFrequency" value="20000" />

                <property name="ipFinder">
                    <bean class="org.apache.ignite.spi.discovery.tcp.ipfinder.vm.TcpDiscoveryVmIpFinder">

                        <property name="addresses">
                            <list>
                                <value>127.0.0.1:47500..47509</value>
                            </list>
                        </property>
                    </bean>
                </property>
            </bean>
        </property>

        <property name="cacheConfiguration">
            <list>

                <!-- CACHE LAYER 1 Trigger Record -->
                <bean class="org.apache.ignite.configuration.CacheConfiguration">
                    <property name="rebalanceDelay" value="300" />

                    <property name="rebalanceBatchSize" value="10485760" />
                    <property name="rebalanceThrottle" value="200" />
                    <property name="rebalanceBatchesPrefetchCount" value="10" />
                    <property name="rebalanceTimeout" value="60" />

                    <property name="name" value="CACHE_L1_TRIGGER_RECORD"/>

                    <property name="atomicityMode" value="ATOMIC" />
                    <property name="cacheMode" value="PARTITIONED" />
                    <property name="backups" value="1" />
                    <property name="readThrough" value="true"/>
                    <property name="writeThrough" value="true"/>

                    <property name="writeBehindEnabled" value="true"/>
                    <property name="writeBehindFlushSize" value="10240" />
                    <property name="writeBehindFlushFrequency" value="5000"/>
                    <property name="writeBehindFlushThreadCount" value="4" />


                    <!-- Enable on-heap caching for this distributed cache. -->
                    <property name="onheapCacheEnabled" value="true" />

                    <property name="evictionPolicy">
                        <!-- FIFO eviction policy. -->
                        <bean class="org.apache.ignite.cache.eviction.fifo.FifoEvictionPolicy">
                            <!-- Set the maximum cache size to 1.5 million (default is 100,000). -->
                            <property name="maxSize" value="1500000"/>
                        </bean>
                    </property>

                    <property name="cacheStoreFactory">
                        <bean class="org.apache.ignite.cache.store.cassandra.CassandraCacheStoreFactory">
                            <property name="dataSourceBean" value="cassandraAdminDataSource"/>
                            <property name="persistenceSettingsBean" value="cache_l1_triggerrecord_persistence_settings"/>
                        </bean>
                    </property>

                    <property name="queryEntities">
                        <list>
                            <bean class="org.apache.ignite.cache.QueryEntity">
                                <!-- Setting indexed type's key class -->
                                <property name="keyType" value="java.lang.String"/>

                                <!-- Setting indexed type's value class -->
                                <property name="valueType"
                                          value="com.thinkbig.veon.datadefinition.L1_TriggerRecord"/>

                                <!-- Defining fields that will be either indexed or queryable.
                                Indexed fields are added to 'indexes' list below.-->
                                <property name="fields">
                                    <map>
                                        <entry key="id" value="java.lang.String"/>
                                        <entry key="srcId" value="java.lang.String"/>
                                        <entry key="payload" value="java.lang.String"/>
                                        <entry key="entryTime" value="java.lang.String"/>
                                        <entry key="isProcessed" value="java.lang.String"/>
                                        <entry key="batchId" value="java.lang.String"/>

                                    </map>
                                </property>

                                <!-- Defining indexed fields.-->
                                <property name="indexes">
                                    <list>
                                        <!-- Single field (aka. column) index -->
                                        <bean class="org.apache.ignite.cache.QueryIndex">
                                            <constructor-arg value="id"/>
                                        </bean>
                                        <bean class="org.apache.ignite.cache.QueryIndex">
                                            <constructor-arg value="srcId"/>
                                        </bean>
                                        <bean class="org.apache.ignite.cache.QueryIndex">
                                            <constructor-arg value="isProcessed"/>
                                        </bean>
                                        <bean class="org.apache.ignite.cache.QueryIndex">
                                            <constructor-arg value="batchId"/>
                                        </bean>
                                    </list>
                                </property>

                            </bean>
                        </list>
                    </property>



                </bean>

                <bean class="org.apache.ignite.configuration.CacheConfiguration">
                    <property name="rebalanceDelay" value="300" />

                    <property name="rebalanceBatchSize" value="10485760" />
                    <property name="rebalanceThrottle" value="200" />
                    <property name="rebalanceBatchesPrefetchCount" value="10" />
                    <property name="rebalanceTimeout" value="60" />

                    <property name="name" value="CACHE_L2_DPI"/>

                    <property name="atomicityMode" value="ATOMIC" />
                    <property name="cacheMode" value="PARTITIONED" />
                    <property name="backups" value="1" />
                    <property name="readThrough" value="true"/>
                    <property name="writeThrough" value="true"/>

                    <property name="writeBehindEnabled" value="true"/>
                    <property name="writeBehindFlushSize" value="10240" />
                    <property name="writeBehindFlushFrequency" value="5000"/>
                    <property name="writeBehindFlushThreadCount" value="4" />


                    <!-- Enable on-heap caching for this distributed cache. -->
                    <property name="onheapCacheEnabled" value="true" />

                    <property name="evictionPolicy">
                        <!-- FIFO eviction policy. -->
                        <bean class="org.apache.ignite.cache.eviction.fifo.FifoEvictionPolicy">
                            <!-- Set the maximum cache size to 1.5 million (default is 100,000). -->
                            <property name="maxSize" value="1500000"/>
                        </bean>
                    </property>

                    <property name="cacheStoreFactory">
                        <bean class="org.apache.ignite.cache.store.cassandra.CassandraCacheStoreFactory">
                            <property name="dataSourceBean" value="cassandraAdminDataSource"/>
                            <property name="persistenceSettingsBean" value="cache_l2_DPI_persistence_settings"/>
                        </bean>
                    </property>

                    <property name="queryEntities">
                        <list>
                            <bean class="org.apache.ignite.cache.QueryEntity">
                                <!-- Setting indexed type's key class -->
                                <property name="keyType" value="java.lang.String"/>

                                <!-- Setting indexed type's value class -->
                                <property name="valueType"
                                          value="com.thinkbig.veon.datadefinition.L2_DPI"/>

                                <!-- Defining fields that will be either indexed or queryable.
                                Indexed fields are added to 'indexes' list below.-->
                                <property name="fields">
                                    <map>
                                        <entry key="id" value="java.lang.String"/>
                                        <entry key="srcId" value="java.lang.String"/>
                                        <entry key="payload" value="java.lang.String"/>
                                        <entry key="entryTime" value="java.lang.String"/>
                                        <entry key="isProcessed" value="java.lang.String"/>
                                        <entry key="batchId" value="java.lang.String"/>

                                    </map>
                                </property>

                                <!-- Defining indexed fields.-->
                                <property name="indexes">
                                    <list>
                                        <!-- Single field (aka. column) index -->
                                        <bean class="org.apache.ignite.cache.QueryIndex">
                                            <constructor-arg value="id"/>
                                        </bean>
                                        <bean class="org.apache.ignite.cache.QueryIndex">
                                            <constructor-arg value="srcId"/>
                                        </bean>
                                        <bean class="org.apache.ignite.cache.QueryIndex">
                                            <constructor-arg value="isProcessed"/>
                                        </bean>
                                        <bean class="org.apache.ignite.cache.QueryIndex">
                                            <constructor-arg value="batchId"/>
                                        </bean>
                                    </list>
                                </property>

                            </bean>
                        </list>
                    </property>



                </bean>








            </list>
        </property>

        <property name="includeEventTypes">
            <util:constant static-field="org.apache.ignite.events.EventType.EVT_CACHE_OBJECT_PUT"/>
        </property>
    </bean>
</beans>